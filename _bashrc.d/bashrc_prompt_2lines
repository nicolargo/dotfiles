# Colors
NoColor="\033[0m"
Cyan="\033[0;36m"
Green="\033[0;32m"
Red="\033[0;31m" 
Yellow="\033[0;33m"

# Chars
RootPrompt="#"
NonRootPrompt="$"

# Contextual prompt
prompt() {
	USERNAME=`whoami`
	HOSTNAME=`hostname`
	CURRENTPATH=`pwd | sed "s|$HOME|~|g"`

	LEFTPROMPT=$Cyan$USERNAME@$HOSTNAME":"$Yellow$CURRENTPATH
	let LEFTSIZE=$(echo -n "$USERNAME@$HOSTNAME:$CURRENTPATH" | wc -c)

	RIGHTPROMPT=""
	let RIGHTSIZE=0
	GITSTATUS=$(git status 2> /dev/null)
	#echo $GITSTATUS > /dev/null 2>&1 
	if [ $? -eq 0 ]; then
		echo $GITSTATUS | grep "not staged" > /dev/null 2>&1
		if [ $? -eq 0 ]; then
			RIGHTPROMPT=$Red
		else
			RIGHTPROMPT=$Green
		fi
		# BRANCH=`git describe --contains --all HEAD`
		BRANCH=`git rev-parse --abbrev-ref HEAD`
		RIGHTPROMPT=$RIGHTPROMPT"[Git branch "$BRANCH"]"
		let RIGHTSIZE=$(echo -n "[Git branch "$BRANCH"]" | wc -c)
	fi
	let BLANCKSIZE=${COLUMNS}-${LEFTSIZE}-${RIGHTSIZE}
	RIGHTPROMPT=$RIGHTPROMPT$NoColor

	echo -e -n "\n"$LEFTPROMPT
	printf "%$(($BLANCKSIZE))s"
	echo -e $RIGHTPROMPT
}

# Define PROMPT_COMMAND if not already defined (fix: Modifying title on SSH connections)
if [ -z "$PROMPT_COMMAND" ]; then
	case $TERM in
	xterm*)
		PROMPT_COMMAND='printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/~}"'
	;;
	screen)
		PROMPT_COMMAND='printf "\033]0;%s@%s:%s\033\\" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/~}"'
	;;
	esac
fi
 
# Main prompt
PROMPT_COMMAND="prompt;$PROMPT_COMMAND"
 
if [ $EUID -ne 0 ]; then
	PS1=$NonRootPrompt" "
else
	PS1=$RootPrompt" "
fi
